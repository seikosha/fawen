version: '3'
services:
  mysql:                      # mysql容器
    container_name: mysql
    build:
      context: ./
      dockerfile: ./docker/mysql/Dockerfile
    environment:
      MYSQL_DATABASE: fawen     # 创建名为blog的库
      MYSQL_ROOT_PASSWORD: belldandy5  # 设置root用户的密码
      MYSQL_ROOT_HOST: '%'
      TZ: Asia/Shanghai        # 设置容器的时区为亚洲上海
    expose:
      - "3306"                # 容器对外（向别的容器等）暴露3306的端口
    volumes:
      - ./mysql/mysql_data:/var/lib/mysql
    restart: always            # 自动重启

  server:                     # 后端springboot容器，名字是'server'
    container_name: server
    restart: always
    build:
      context: ./
      dockerfile: ./docker/server/Dockerfile
    working_dir: /app         # 设置工作目录为容器内的app文件夹
    volumes:
      - ./src:/app           # 将主机的blog文件夹(java代码)映射到容器内的app文件夹
      - ~/.m2:/root/.m2       # 映射主机和容器的maven
      - ./logs/:/app/log      # 映射容器产生的日志到主机的logs文件夹
    expose:
      - "8080"                # 暴露8000端口
    command: mvn clean spring-boot:run '-Dmaven.test.skip=true' # server容器创建后执行的命令
    depends_on:               # 依赖于mysql，redis容器，被依赖容器启动后server容器才启动
      - mysql
  frontend:                   # 前端node容器(运行Vue.js)，名字是'frontend'
    container_name: frontend
    restart: always
    build:
      context: ./
      dockerfile: ./docker/frontend/Dockerfile
    working_dir: /app
    volumes:
      - ./frontend:/app       # 将主机的frontend文件夹(vue.js代码)映射到容器内的app文件夹
    command: npm run dev
    expose:
      - "8080"                # 暴露8080端口
    depends_on:
      - server
